import Mock from 'mockjs2'
import { builder, getBody } from '../util'

const totalCount = 500

const suppliesList = (options) => {
  const parameters = getBody(options)
  const result = []
  const current = parseInt(parameters.current)
  const size = parseInt(parameters.size)
  const totalPage = Math.ceil(totalCount / size)
  const next = (current >= totalPage ? (totalCount % size) : size) + 1
  for (let i = 1; i < next; i++) {
    result.push({
      id: Mock.mock('@integer(10000000, 19999999)'),
      company: Mock.Random.cname(),
      name: Mock.Random.cname(),
      model: Mock.mock('@integer(1, 100)'),
      type: Mock.mock('@integer(1, 5)'),
      count: Mock.mock('@integer(200, 300)'),
      longitude: Mock.mock('@integer(100, 130)'),
      latitude: Mock.mock('@integer(100, 130)'),
      location: Mock.Random.county()
    })
  }
  return builder({
    size: size,
    current: current,
    total: totalCount,
    pages: totalPage,
    records: result
  })
}

const suppliesOption = () => {
  const data = [
    {
      text: '种类一',
      value: '1'
    },
    {
      text: '种类二',
      value: '2'
    },
    {
      text: '种类三',
      value: '3'
    },
    {
      text: '种类四',
      value: '4'
    }, {
      text: '种类五',
      value: '5'
    }
  ]
  return builder(data)
}

const accidentList = (options) => {
  const parameters = getBody(options)
  const result = []
  const current = parseInt(parameters.current)
  const size = parseInt(parameters.size)
  const totalPage = Math.ceil(totalCount / size)
  const next = (current >= totalPage ? (totalCount % size) : size) + 1
  for (let i = 1; i < next; i++) {
    result.push({
      id: Mock.mock('@integer(10000000, 19999999)'),
      desc: Mock.Random.cname(),
      name: Mock.Random.cname(),
      area: Mock.mock('@integer(1, 100)'),
      location: Mock.mock('@integer(1, 5)'),
      unit: Mock.mock('@integer(200, 300)'),
      type: Mock.mock('@integer(100, 130)'),
      doc: Mock.mock('@integer(100, 130)'),
      creator: Mock.Random.county(),
      createTime: Mock.mock('@integer(100, 130)'),
      happenTime: Mock.mock('@integer(100, 130)')
    })
  }
  console.log(result)
  return builder({
    size: size,
    current: current,
    total: totalCount,
    pages: totalPage,
    records: result
  })
}

Mock.mock('/resources/supplies/research', 'post', suppliesList)
Mock.mock('/resources/supplies/options', 'get', suppliesOption)
Mock.mock('/safety/accident/list', 'post', accidentList)
