// import storage from 'store'
import { loginByUsername, loginByPhone, getInfo, logout, refreshToken } from '@/api/login'
// import { ACCESS_TOKEN } from '@/store/mutation-types'
import { welcome } from '@/utils/util'
import { setToken,setRefreshToken } from '@/utils/auth'
import { getStore, setStore } from '@/utils/store'

const user = {
  state: {
    token: '',
    name: '',
    welcome: '',
    avatar: '',
    roles: [],
    info: getStore({ name: 'info' }) || {},
    tenantId: getStore({name: 'tenantId'}) || '',
    refreshToken: getStore({name: 'refreshToken'}) || '',
  },

  mutations: {
    SET_TOKEN: (state, token) => {
      setToken(token)
      state.token = token
      setStore({ name: 'access_token', content: token })
    },
    GET_TOKEN: (state) => {
      return state.token
    },
    SET_NAME: (state, { name, welcome }) => {
      state.name = name
      state.welcome = welcome
    },
    SET_AVATAR: (state, avatar) => {
      state.avatar = avatar
    },
    SET_ROLES: (state, roles) => {
      state.roles = roles
    },
    SET_INFO: (state, info) => {
      state.info = info
      setStore({ name: 'info', content: state.info })
    },
    SET_REFRESH_TOKEN: (state, refreshToken) => {
      setRefreshToken(refreshToken)
      state.refreshToken = refreshToken;
      setStore({name: 'refreshToken', content: state.refreshToken})
    },
    SET_TENANT_ID: (state, tenantId) => {
      state.tenantId = tenantId;
      setStore({name: 'tenantId', content: state.tenantId})
    },
  },

  actions: {
    // 登录
    LoginByUsername ({ commit }, userInfo) {
      return new Promise((resolve, reject) => {
        loginByUsername(userInfo).then(response => {
          const data = response
          commit('SET_TOKEN', data.access_token)
          // commit('SET_INFO', data)
          commit('SET_MENUID', '1322850060090322946')
          commit('SET_REFRESH_TOKEN', data.refresh_token);
          commit('SET_TENANT_ID', data.tenant_id);
          resolve(data)
        }).catch(error => {
          reject(error)
        })
      })
    },
    // 手机号登录
    LoginByPhone ({ commit }, userInfo) {
      return new Promise((resolve, reject) => {
          loginByPhone(userInfo).then(response => {
            const result = response.data
            // storage.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000)
            commit('SET_TOKEN', result.token)
            // commit('SET_INFO', result.userInfo)
            resolve(result)
          }).catch(error => {
            reject(error)
          })
      })
    },
    // 获取用户信息
    GetInfo ({ commit }) {
      return new Promise((resolve, reject) => {
        getInfo().then(response => {
          const result = response.data
          commit('SET_INFO', result)
          commit('SET_NAME', { name: result.name, welcome: welcome() })
          commit('SET_AVATAR', result.avatar)
          resolve(response)
        }).catch(error => {
          reject(error)
        })
      })
    },

    // 登出
    Logout ({ commit, state }) {
      return new Promise((resolve, reject) => {
        logout().then((res) => {
          commit('SET_TOKEN', '')
          commit('SET_INFO', '')
          commit('SET_MENUID', '')
          commit('SET_ROUTERS', [])
          commit('SET_PERMISSION', [])
          resolve(res)
        }).catch((err) => {
          reject(err)
        })
      })
    },
    // 注销session
    FedLogout ({ commit }) {
      return new Promise(resolve => {
        commit('SET_TOKEN', '')
        commit('SET_INFO', '')
        commit('SET_MENUID', '')
        resolve()
      })
    },
    //刷新token
    refreshToken({state, commit}) {
      return new Promise((resolve, reject) => {
        refreshToken(state.refreshToken, state.tenantId).then(res => {
          const data = res
          commit('SET_TOKEN', data.access_token)
          commit('SET_REFRESH_TOKEN', data.refresh_token)
          resolve()
        }).catch(error => {
          reject(error)
        })
      })
    },
  }
}

export default user
