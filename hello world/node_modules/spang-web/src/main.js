// with polyfills
import 'core-js/stable'
import 'regenerator-runtime/runtime'

import Vue from 'vue'
import App from './App.vue'
import router from './router'
import store from './store/'
import i18n from './locales'
import { VueAxios } from './utils/request'
import ProLayout, { PageHeaderWrapper } from '@ant-design-vue/pro-layout'
import themePluginConfig from '../config/themePluginConfig'

// mock
// WARNING: `mockjs` NOT SUPPORT `IE` PLEASE DO NOT USE IN `production` ENV.
// import './mock'

import bootstrap from './core/bootstrap'
import './core/lazy_use'
import './permission' // permission control
import './utils/filter' // global filter
import './global.less'
import website from '@/config/website'
import { loadStyle, getUUID, isNotNullOrUndefined } from '@/utils/util'
import FormControls from '@/views/safety/components/FormControls/index.js'
// 手动注入组件
import { Timeline, Tree, Calendar, TreeSelect, AutoComplete, FormModel, Cascader, Space, Empty, Collapse } from 'ant-design-vue'
// 绑定常用请求
import { getDict } from '@/api/system'
import * as requestAPIs from '@/api/common'

// 图片预览
import 'viewerjs/dist/viewer.css'
import VueViewer from 'v-viewer'
Vue.use(VueViewer)

// 导入form-create
import FormCreate from '@form-create/ant-design-vue'
import ImageViewer from '@/components/viewer'

import UploadFile from '@/components/UploadFile'
import PersonListSelect from '@/views/safety/components/PersonListSelect'
import DepartmentSelect from '@/views/safety/components/DepartmentSelect'
import FormTreeSelect from '@/components/FormCreate/FormTreeSelect'

import VueQuillEditor from 'vue-quill-editor'
import 'quill/dist/quill.core.css'
import 'quill/dist/quill.snow.css'
import 'quill/dist/quill.bubble.css'
import dayjs from 'dayjs'
Vue.prototype.dayjs = dayjs
Vue.component('UploadFile', UploadFile)
Vue.component('PersonListSelect', PersonListSelect)
Vue.component('DepartmentSelect', DepartmentSelect)
Vue.component('FormTreeSelect', FormTreeSelect)
Vue.use(FormCreate)
Vue.component('VueViewer', ImageViewer)
Vue.use(Collapse)
Vue.use(FormModel)
Vue.use(FormControls)
Vue.use(Timeline)
Vue.use(Tree)
Vue.use(Calendar)
Vue.use(TreeSelect)
Vue.use(AutoComplete)
Vue.use(Cascader)
Vue.use(Space)
Vue.use(Empty)
Vue.use(VueQuillEditor)
// Vue.use(Tooltip)
// 动态加载阿里云字体库
const iconfontVersion = ['567566_pwc3oottzol', '1066523_6bvkeuqao36']
const iconfontUrl = '//at.alicdn.com/t/font_$key.css'
iconfontVersion.forEach(ele => {
  loadStyle(iconfontUrl.replace('$key', ele))
})

Vue.prototype.download = (data, fileName) => {
  if (!data) {
    return
  }
  const url = window.URL.createObjectURL(
    new Blob([data], { type: 'application/octet-stream' })
  )

  const link = document.createElement('a')
  link.style.display = 'none'
  link.href = url
  link.setAttribute('download', fileName)

  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
  URL.revokeObjectURL(url) // 释放URL 对象
}

Vue.prototype.BASE_URL = process.env.VUE_APP_API_BASE_URL

Vue.prototype.isNotNullOrUndefined = isNotNullOrUndefined

Vue.prototype.getUUID = getUUID

Vue.prototype.getDict = getDict

for (const key in requestAPIs) {
  Vue.prototype[key] = requestAPIs[key]
}

Vue.config.productionTip = false

// mount axios to `Vue.$http` and `this.$http`
Vue.use(VueAxios)
Vue.component('pro-layout', ProLayout)
Vue.component('page-container', PageHeaderWrapper)
Vue.component('page-header-wrapper', PageHeaderWrapper)

window.umi_plugin_ant_themeVar = themePluginConfig.theme
Vue.config.silent = true
Vue.prototype.website = website

new Vue({
  router,
  store,
  i18n,
  created: bootstrap,
  render: h => h(App)
}).$mount('#app')
