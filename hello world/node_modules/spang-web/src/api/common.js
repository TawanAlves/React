import request from '@/utils/request'
import ApiUrls from './urls'
// 获取分页列表
export function getList(url, parameter) {
  return request({
    url: url,
    method: 'get',
    params: {
      ...parameter
    }
  })
}

// 根据ID删除行
export function deleteById(url, parameter) {
  return request({
    url: url,
    method: 'delete',
    params: {
      id: parameter
    }
  })
}

// 根据ID删除行
export function deleteByIds(url, ids) {
  return request({
    url: url,
    method: 'delete',
    data: ids

  })
}

// 提交表单
export function submitForm(url, parameter, method, config) {
  return request({
    ...config,
    url: url,
    method: method,
    data: parameter

  })
}
export function submitFormPost(url, parameter, method, config) {
  return request({
    ...config,
    url: url,
    method: method,
    params: parameter.params,
    data: parameter.data
  })
}
export function submitFormApi(method,url, parameter) {
  return request({
    url: url,
    method: method,
    data: parameter,
  })
}
/**
 * 根据id获取详情
 * @param url
 * @param id
 * @returns {AxiosPromise}
 */
export function getById(url, id) {
  return request({
    url: url,
    method: 'get',
    params: {
      id
    }
  })
}

/**
 * restful风格的根据id获取详情
 * @param url
 * @param id
 * @returns {AxiosPromise}
 */
export function getByIdRestful (url, id) {
    return request({
    url: url + '/' + id,
    method: 'get'
  })
}

/**
 * 文件上传
 * @param parameter
 * @returns {AxiosPromise}
 */
export const fileUpLoad = (parameter) => {
  return request({
    headers: {
      'Content-Type': 'multipart/form-data;'
    },
    url: ApiUrls.fileUploadNew,
    method: 'post',
    data: parameter
  })
}

/**
 * 下载文件
 * @param id
 * @param fileName
 * @returns {Promise<AxiosResponse<any>>}
 */
export const downloadFile = (id, fileName) => {
  return request({
    url: ApiUrls.fileDownloadNew,
    method: 'get',
    responseType: 'blob',
    params: {
      id: id
    }
  }).then(res => {
    resolveBlob(res, fileName)
  })
}

/**
 * 解析blob响应内容并下载
 * @param {*} res blob响应内容
 */
export function resolveBlob(res, fileName) {
  const aLink = document.createElement('a')
  aLink.href = URL.createObjectURL(new Blob([res]))
  // //从response的headers中获取filename, 后端response.setHeader("Content-disposition", "attachment; filename=xxxx.docx") 设置的文件名;
  // var patt = new RegExp('filename=([^;]+\\.[^\\.;]+);*')
  // var contentDisposition = decodeURI(res.headers['content-disposition'])
  // var result = patt.exec(contentDisposition)
  // var fileName = result[1]
  // fileName = fileName.replace(/\"/g, '')
  aLink.setAttribute('download', fileName)
  document.body.appendChild(aLink)
  aLink.click()
  URL.revokeObjectURL(aLink.href)
  document.body.removeChild(aLink)
}